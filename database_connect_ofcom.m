function [response,delay,error]=database_connect_ofcom(request_type,latitude,longitude,height,my_path,counter)

error=false; %Default error value
delay=[]; %Default delay value

server_name='https://tvwsdb.broadbandappstestbed.com/json.rpc';
text_coding='"Content-Type: application/json "';

device_type='"MODE_2"'; %Types of TVWS device: http://en.wikipedia.org/wiki/TV-band_device


ofcom_query(request_type,device_type,latitude,longitude,height);

my_path=regexprep(my_path,' ','\\ ');

cmnd=['/usr/bin/curl -X POST ',server_name,' -H ',text_coding,' --data-binary @',my_path,'/ofcom.json -w %{time_total}'];
[status,response]=system(cmnd);
    
    remove_first_extra_error_lines = strfind(response,'{');
    response = response(remove_first_extra_error_lines:end);
   
    end_query_str='"BTWhiteSpacePilotV1-2013"';
    pos_end_query_str=findstr(response,end_query_str);  
    disp('pos_end_query_str -->');
    disp(pos_end_query_str);
    
    length_end_query_str=length(end_query_str)+22;
    response(pos_end_query_str+length_end_query_str:end);
    
    disp('response(pos_end_query_str+length_end_query_str:end); -->');
    disp(response(pos_end_query_str+length_end_query_str:end));
    
    
    
    delay=str2num(response(pos_end_query_str+length_end_query_str:end));     
    response(pos_end_query_str+length_end_query_str:end)=[];
    disp('DCO delay -->');
    disp(delay);
    
system('rm ofcom.json');

function ofcom_query(request_type,device_type,latitude,longitude,height)

request=['{"jsonrpc": "2.0",',...
    '"method": "spectrum.paws.getSpectrum",',...
    '"params": {',...
    '"type": ',request_type,', ',...
    '"version": "0.6", ',...
    '"deviceDesc": ',...
    '{ "manufacturerId": "TuDelft", ',...
    '"modelId": "Test", ',...
    '"serialNumber": "0001", ',...
    '"etsiEnDeviceType": "A", ',...
    '"etsiEnDeviceEmissionsClass": "3", ',...
    '"etsiEnDeviceCategory": "master", ',...
    '"etsiEnTechnologyId": "466", '...
    '"rulesetIds": [ "OfcomWhiteSpacePilotV1-2013",],}, ',...
    '"location": ',...
    '{ "point": ',...
    '{ "center": ',...
    '{"latitude": ',latitude,', '...
    '"longitude": ',longitude,'}, ',...
    '"orientation": 45, ' ,...
    '"semiMajorAxis": 50, ' ,...
    '"semiMinorAxis": 50, ' ,...
      '},}, ',...
         '"capabilities": { ',...
          '"frequencyRanges": [ {' ,...
         '"startHz": 470000000, ',...
         '"stopHz": 790000000, ',...
         '},],},',...
         '"antenna": { ',...
          '"height": 7.5, ',...
         '"heightType": "AGL" }, ',...
    '},"id": "123456789"}'];

dlmwrite('ofcom.json',request,'');